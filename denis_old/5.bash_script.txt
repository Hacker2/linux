$0 Имя выполняемого сценария (или, в интерактивном режиме, — самой оболочки)
$# Количество позиционных параметров, переданных сценарию
$_ Последний аргумент предыдущей из выполнявшихся команд
$? Код завершения последней выполненной команды (напоминаю, что значение 0
говорит об успешном завершении, другое — об ошибочном)
$$ Номер текущего процесса (PID)
$! Номер (PID) последнего асинхронного процесса (команды, выполненной
в фоновом режиме)
$* Все позиционные параметры, слитые в одну строку: «$*» эквивалентно
«$1х$2х...$п», где х — первый символ значения переменной IFS
(internal field separator), по умолчанию — пробел
$<э> Все позиционные параметры, подлежащие дальнейшему разбору:
«$@» эквивалентно «$1» «$2» ...»$п»

echo -n "Продолжать? (y/n): "
read yesno
echo $yesno

read name middle lastname   - read variables

~ заменяется на имя домашнего каталога пользователя, запустившего сценарий;
~ + заменяется на путь к текущему каталогу;
— заменяется на путь к предыдущему каталогу.

cat /home/den/linuxbook/{intro,param,subst} > glava8
с т р о к а 1 { с т р о к а 2 , с т р о к а 3 ...} с тр oKaN заменяется на: строка1строка2строкаЫ строка1строкаЗстрокаЫ ...

$((выражение)) или $ [выражение]
echo $(($SECONDS/3600))

Имя_массива [индекс] =значение, например:
 weekday[0]=Понедельник
 weekday[4]=Пятница
{имя_массива[индекс]}
echo ${weekday[0]}
${имя_массива[*]} или ${имя_массива[@]}, например:
$echo ${weekday[*]}
$ weekday=(Пн Вт Ср Чт Пт Сб Вс)  - weekday [0] =Пн; weekday [1] =Вт; ... weekday [6] =Вс
holidays= ([0]=Sunday [6]=Saturday)

case значение in
[шаблон].) список1;;
шаблон2 I шаблонЗ) список2;; ]
esac

if список1 then
список2
[elif списокЗ then
список4]
[else
список5]
fi

t e s t -e <файл>
или
[ -е <файл> ]
test $USER; echo $?

! (выражение) —отрицание;
выражение1 -а выражение2 — логическое И (and);
выражение1 -о выражение2 — логическое ИЛИ (or).


-d файл файл существует и является каталогом
-е файл файл существует
-f файл файл существует и является обычным файлом
-L файл файл существует и является символической ссылкой
-г файл файл существует и доступен для чтения
-w файл файл существует и доступен для записи
-х файл файл существует и является исполняемым
-s файл файл существует и его размер больше 0
-N файл файл существует и изменился со времени последнего чтения
файл1 -nt файл2 время модификации файла1 позже (newer than), чем файла2
файл1 -ot файл2 время модификации файла1 раньше (older than), чем файла2
файл1 -ef файл2 файл1 — это жесткая ссылка на файл2

-z строка длина строки равна 0
-п строка длина строки не равна 0
стр1 == стр2 строки совпадают
стр1 !== стр2 строки не совпадают
стр1 < стр2 строка1 предшествует строке2 в лексикографическом порядке.
Алфавит соответствует текущей локали
стр1 > стр2 строка1 следует за строкой2 в лексикографическом порядке

-eq — равно;
-пе — не равно;
-It — меньше;
-1е — меньше или равно;
-gt — больше;
-ge — больше или равно.

for переменная [in шаблон]
do
список
done

while список1
do
список2
done

until СПИСОК1
do
список2
done

select переменная [in шаблон]
do
список
done

${параметр:-строка} Значение по умолчанию. Если параметр имеет непустое значение,
то подставляется оно, иначе — указанная строка
${параметр:=строка} Присваивание значения по умолчанию. Если параметр не имеет
непустого значения, то ему присваивается «строка», после чего
значение подставляется. Конструкция допустима только для
переменных оболочки
${параметр:?сообщение> Ошибка, если пусто. Если параметр не имеет непустого значения,
то выводится указанное сообщение. Сообщение можно опустить,
тогда будет выведено стандартное сообщение
${параметр:+строка} Дополнительное значение. Если параметр имеет непустое значение,
подставляется «строка», иначе — пустая строка
${параметр#шаблон} Подставляется значение параметра, в котором из головной части
удален наименьший фрагмент, удовлетворяющий шаблону
${параметр##шаблон) Подставляется значение параметра, в котором из головной части
удален наибольший фрагмент, удовлетворяющий шаблону
${параметр%шаблон} Подставляется значение параметра, в котором из хвостовой части
удален наименьший фрагмент, удовлетворяющий шаблону
$ {параметр%%шаблон} Подставляется значение параметра, в котором из хвостовой части
удален наибольший фрагмент, удовлетворяющий шаблону
${#параметр} Если параметр есть * или @, подставляется количество позиционных
параметров, иначе — длина значения параметра в байтах

[function] имя()
{
список
}

